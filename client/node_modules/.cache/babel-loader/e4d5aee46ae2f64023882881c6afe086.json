{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan Pylar\\\\Desktop\\\\Coding\\\\project-three\\\\client\\\\src\\\\Components\\\\TodoList.js\";\nimport React from 'react'; // stateless component\n\nconst Title = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"titleWrapper\",\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"textCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }\n  }, \"To-do List\"));\n};\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNewTodoAddition = this.handleNewTodoAddition.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleNewTodoAddition() {\n    if (this.input.value !== '') {\n      this.props.addTodo(this.input.value);\n      this.setState({\n        value: ''\n      });\n      this.input.placeholder = \"Add todo here...\";\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // ref should be passed a callback\n      // with underlying dom element as its\n      // argument to get its reference \n      React.createElement(\"div\", {\n        id: \"form\",\n        className: \"row my-2 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control col-9\",\n        ref: node => {\n          this.input = node;\n        },\n        value: this.state.value,\n        placeholder: \"Add todos here...\",\n        autocomplete: \"off\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary col-2 ml-2\",\n        onClick: this.handleNewTodoAddition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }\n      }, \"+\"))\n    );\n  }\n\n}\n\nconst Todo = ({\n  todo,\n  remove\n}) => {\n  // single todo \n  return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"todos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, todo.value, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"removeBtn float-right\",\n    onClick: () => {\n      remove(todo.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, \"x\"));\n};\n\nconst List = ({\n  todos,\n  remove\n}) => {\n  let allTodos = [];\n\n  if (todos.length > 0) {\n    allTodos = todos.map(todo => {\n      // passing todo and remove method reference\n      return /*#__PURE__*/React.createElement(Todo, {\n        todo: todo,\n        remove: remove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 12\n        }\n      }); //return (<p>{todo.value}</p>);\n    });\n  } else {\n    allTodos.push( /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"acu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"All caught up!\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \" Your Todos: \"), allTodos);\n};\n\nclass ContainerForTodos extends React.Component {\n  constructor(props) {\n    super(props);\n    const introData = [{\n      id: -1,\n      value: \"Hover over todos and click on 'x' to delete them!\"\n    }];\n    const localData = localStorage.todos && JSON.parse(localStorage.todos);\n    this.state = {\n      data: localData || introData\n    }; // binding methods\n\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n  } // Handler to update localStorage\n\n\n  updateLocalStorage() {\n    if (typeof Storage !== \"undefined\") localStorage.todos = JSON.stringify(this.state.data);\n  } // Handler to add todo\n\n\n  addTodo(val) {\n    let id; // if localStorage is available then increase localStorage count\n    // else use global window object's id variable\n\n    if (typeof Storage !== \"undefined\") {\n      id = Number(localStorage.count);\n      localStorage.count = Number(localStorage.count) + 1;\n    } else {\n      id = window.id++;\n    }\n\n    const todo = {\n      value: val,\n      id: id\n    };\n    this.state.data.push(todo); // update state\n\n    this.setState({\n      data: this.state.data\n    }, () => {\n      // update localStorage\n      this.updateLocalStorage();\n    });\n  } // Handler to remove todo\n\n\n  removeTodo(id) {\n    // filter out the todo that has to be removed\n    const list = this.state.data.filter(todo => {\n      if (todo.id !== id) return todo;\n    }); // update state\n\n    this.setState({\n      data: list\n    }, () => {\n      // update localStorage\n      this.updateLocalStorage();\n    });\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n\n    if (typeof Storage !== \"undefined\") {\n      if (!localStorage.todos) {\n        localStorage.todos = JSON.stringify(this.state.data);\n      }\n\n      if (!localStorage.count) {\n        localStorage.count = 0;\n      }\n    } else {\n      console.log(\"%cApp will not remember todos created as LocalStorage Is Not Available\");\n      window.id = 0;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      className: \"card col-11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      todos: this.state.data,\n      remove: this.removeTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default ContainerForTodos;","map":{"version":3,"sources":["C:/Users/Evan Pylar/Desktop/Coding/project-three/client/src/Components/TodoList.js"],"names":["React","Title","Form","Component","constructor","props","state","value","handleChange","bind","handleNewTodoAddition","event","setState","target","input","addTodo","placeholder","render","node","Todo","todo","remove","id","List","todos","allTodos","length","map","push","ContainerForTodos","introData","localData","localStorage","JSON","parse","data","removeTodo","updateLocalStorage","Storage","stringify","val","Number","count","window","list","filter","componentDidMount","clear","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\n// stateless component\nconst Title = () => {\n\treturn (\n\t\t<div id=\"titleWrapper\" className=\"text-center mb-4\">\n\t\t\t<h2 className=\"textCenter\">To-do List</h2>\n\t\t</div>\n\t);\n};\nclass Form extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: ''\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleNewTodoAddition = this.handleNewTodoAddition.bind(this);\n\t}\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\tvalue: event.target.value\n\t\t});\n\t}\n\thandleNewTodoAddition() {\n\t\tif(this.input.value !== '') {\n\t\t\tthis.props.addTodo(this.input.value);\n\t\t\tthis.setState({\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t\tthis.input.placeholder = \"Add todo here...\";\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t// ref should be passed a callback\n\t\t\t// with underlying dom element as its\n\t\t\t// argument to get its reference \n\t\t\t<div id=\"form\" className=\"row my-2 d-flex justify-content-center\">\n                <input \n                    className=\"form-control col-9\"\n\t\t\t\t\tref={node => {\n\t\t\t\t\t\tthis.input = node;\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\tplaceholder=\"Add todos here...\"\n\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<button className=\"btn btn-primary col-2 ml-2\"\n\t\t\t\t\tonClick={this.handleNewTodoAddition}\n\t\t\t\t>\t\n\t\t\t\t\t+\n\t\t\t\t</button>\t\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst Todo = ({todo, remove}) => {\n\t// single todo \n\treturn (\n\t\t<p className=\"todos\">\n\t\t\t{todo.value}\n\t\t\t<span \n\t\t\t\tclassName=\"removeBtn float-right\"\n\t\t\t\tonClick={()=> {\n\t\t\t\t\tremove(todo.id)\n\t\t\t\t}}>\n\t\t\t\tx\n\t\t\t</span>\n\t\t</p>\n\t);\n};\nconst List = ({todos, remove}) => {\n\tlet allTodos = [];\n\tif(todos.length > 0) {\n\t\tallTodos = todos.map(todo => {\n\t\t\t// passing todo and remove method reference\n\t\t\treturn (<Todo todo={todo} remove={remove} />);\n\t\t\t//return (<p>{todo.value}</p>);\n\t\t});\n\t} else {\n\t\tallTodos.push(<h3 id=\"acu\">All caught up!</h3>);\t\n\t}\n\treturn (\n\t\t<div id=\"list\">\n            <p id=\"info\"> Your Todos: </p>\n\t\t\t{allTodos}\n\t\t</div>\n\t);\n};\nclass ContainerForTodos extends React.Component {\n\tconstructor(props) {\n        super(props);\n        const introData = [\n\t\t\t{\n\t\t\t\tid: -1,\n\t\t\t\tvalue: \"Hover over todos and click on 'x' to delete them!\"\n\t\t\t}\n\t\t];\n\t\tconst localData = localStorage.todos && JSON.parse(localStorage.todos);\n\t\tthis.state = { \n\t\t\tdata: localData || introData\n\t\t};\n\t\t// binding methods\n\t\tthis.addTodo = this.addTodo.bind(this);\n\t\tthis.removeTodo = this.removeTodo.bind(this);\n\t}\n\t// Handler to update localStorage\n\tupdateLocalStorage() {\n\t\tif (typeof(Storage) !== \"undefined\")\n\t\t\tlocalStorage.todos = JSON.stringify(this.state.data);\n\t}\n\t// Handler to add todo\n\taddTodo(val) {\n\t\tlet id;\n\t\t// if localStorage is available then increase localStorage count\n\t\t// else use global window object's id variable\n\t\tif (typeof(Storage) !== \"undefined\") {\n\t\t\tid = Number(localStorage.count);\n\t\t\tlocalStorage.count = Number(localStorage.count) + 1;\n\t\t} else {\n\t\t\tid = window.id++;\n\t\t}\n\t\tconst todo = { \n\t\t\tvalue: val, \n\t\t\tid: id \n\t\t};\n\t\tthis.state.data.push(todo);\n\t\t// update state\n\t\tthis.setState({\n\t\t\tdata: this.state.data\n\t\t}, () => {\n\t\t\t// update localStorage\n\t\t\tthis.updateLocalStorage();\n\t\t});\n\t}\n\t// Handler to remove todo\n\tremoveTodo(id) {\n\t\t// filter out the todo that has to be removed\n\t\tconst list = this.state.data.filter(todo => {\n\t\t\tif (todo.id !== id)\n\t\t\t\treturn todo;\n\t\t});\n\t\t// update state\n\t\tthis.setState({\n\t\t\tdata: list\n\t\t}, () => {\n\t\t\t// update localStorage\n\t\t\tthis.updateLocalStorage();\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tlocalStorage.clear();\n\t\tif (typeof(Storage) !== \"undefined\") {\n\t\t\tif(!localStorage.todos) {\n\t\t\t\tlocalStorage.todos = JSON.stringify(this.state.data);\n\t\t\t}\n\t\t\tif(!localStorage.count) {\n\t\t\t\tlocalStorage.count = 0;\n\t\t\t}\n\t\t} else {\n            console.log(\"%cApp will not remember todos created as LocalStorage Is Not Available\");\n\t\t\twindow.id = 0;\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"container\" className=\"card col-11\">\n\t\t\t\t<Title />\n\t\t\t\t<Form addTodo={this.addTodo} />\n\t\t\t\t<List todos={this.state.data} remove={this.removeTodo} />\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default ContainerForTodos"]},"metadata":{},"sourceType":"module"}