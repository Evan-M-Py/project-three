{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan Pylar\\\\Desktop\\\\Coding\\\\project-three\\\\client\\\\src\\\\Components\\\\SignupForm.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Brand from \"./Brand\";\nimport Container from \"react-bootstrap/Container\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        const data = new FormData(e.target);\n        fetch('/api/createuser', {\n          method: 'POST',\n          body: data\n        });\n      } else {\n        console.log(\"form is not valid\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 2 ? \"minimum 2 characters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 3 ? \"minimum 3 characters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"phoneNumber\":\n          formErrors.phoneNumber = value.length < 10 ? \"phone number must be exactly 10 numbers\" : \"\";\n          break;\n\n        case \"username\":\n          formErrors.username = value.length < 5 ? \"minimum 5 characters required\" : \"\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 8 ? \"minimum 8 characters required\" : \"\";\n          break;\n\n        case \"truckName\":\n          formErrors.truckName = value.length < 5 ? \"minimum 5 characters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      phoneNumber: null,\n      username: null,\n      password: null,\n      truckName: null,\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        username: \"\",\n        password: \"\",\n        truckName: \"\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"login d-flex align-items-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter your first name\",\n      name: \"firstName\",\n      formNoValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }\n    }), formErrors.firstName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 49\n      }\n    }, formErrors.firstName))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 45\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter your last name\",\n      name: \"lastName\",\n      formNoValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 45\n      }\n    }), formErrors.lastName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 49\n      }\n    }, formErrors.lastName)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 45\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"name@url.com\",\n      name: \"email\",\n      formNoValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 45\n      }\n    }), formErrors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 49\n      }\n    }, formErrors.email))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"phoneNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 45\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"5555555555 (no dashes)\",\n      name: \"phoneNumber\",\n      formNoValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 45\n      }\n    }), formErrors.phoneNumber.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 49\n      }\n    }, formErrors.phoneNumber)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 45\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username\",\n      name: \"username\",\n      formNoValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    }), formErrors.username.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 49\n      }\n    }, formErrors.username))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 45\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      formNoValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 45\n      }\n    }), formErrors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 49\n      }\n    }, formErrors.password)))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: \"truckName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 45\n      }\n    }, \"What is your Truck's name?\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Truck name\",\n      name: \"truckName\",\n      formNoValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 45\n      }\n    }), formErrors.truckName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 49\n      }\n    }, formErrors.truckName)))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"landing-btn col-4 mt-3\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 37\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"mt-3 teal\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 37\n      }\n    }, \"Already a member? Sign in here\")))))));\n  }\n\n}\n\nexport default SignupPage;","map":{"version":3,"sources":["C:/Users/Evan Pylar/Desktop/Coding/project-three/client/src/Components/SignupForm.js"],"names":["React","Component","Form","Button","Col","Row","Jumbotron","Brand","Container","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","SignupPage","constructor","props","handleSubmit","e","preventDefault","state","data","FormData","target","fetch","method","body","console","log","handleChange","name","value","firstName","lastName","email","test","phoneNumber","username","password","truckName","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,MAAMC,UAAU,GAAGC,MAAM,CACrB,sEADqB,CAAzB;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAc,KAAGC;AAAjB,CAAD,KAA6B;AAC3C,MAAIC,KAAK,GAAG,IAAZ;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcJ,UAAd,EAA0BK,OAA1B,CAAmCC,GAAD,IAAS;AACvCA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B;AACH,GAFD;AAGAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBI,OAApB,CAA4BC,GAAG,IAAI;AAC/BA,IAAAA,GAAG,KAAK,IAAR,KAAiBJ,KAAK,GAAG,KAAzB;AACH,GAFD;AAGA,SAAOA,KAAP;AACH,CATD;;AAWA,MAAMM,UAAN,SAAyBnB,SAAzB,CAAmC;AAC/BoB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,YAtBmB,GAsBHC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAId,SAAS,CAAC,KAAKe,KAAN,CAAb,EAA2B;AACvB,cAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaJ,CAAC,CAACK,MAAf,CAAb;AAEAC,QAAAA,KAAK,CAAC,iBAAD,EAAoB;AACrBC,UAAAA,MAAM,EAAE,MADa;AAErBC,UAAAA,IAAI,EAAEL;AAFe,SAApB,CAAL;AAKH,OARD,MAQO;AACHM,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,KAnCkB;;AAAA,SAoCnBC,YApCmB,GAoCHX,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEW,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBb,CAAC,CAACK,MAA1B;AACA,UAAIjB,UAAU,GAAG,KAAKc,KAAL,CAAWd,UAA5B;;AACA,cAAQwB,IAAR;AACI,aAAK,WAAL;AACIxB,UAAAA,UAAU,CAAC0B,SAAX,GACID,KAAK,CAAClB,MAAN,GAAe,CAAf,GACM,+BADN,GAEM,EAHV;AAIA;;AACJ,aAAK,UAAL;AACIP,UAAAA,UAAU,CAAC2B,QAAX,GACIF,KAAK,CAAClB,MAAN,GAAe,CAAf,GACM,+BADN,GAEM,EAHV;AAIA;;AACJ,aAAK,OAAL;AACIP,UAAAA,UAAU,CAAC4B,KAAX,GACI/B,UAAU,CAACgC,IAAX,CAAgBJ,KAAhB,IACM,EADN,GAEM,uBAHV;AAIA;;AACJ,aAAK,aAAL;AACIzB,UAAAA,UAAU,CAAC8B,WAAX,GACIL,KAAK,CAAClB,MAAN,GAAe,EAAf,GACM,yCADN,GAEM,EAHV;AAIA;;AACJ,aAAK,UAAL;AACIP,UAAAA,UAAU,CAAC+B,QAAX,GACIN,KAAK,CAAClB,MAAN,GAAe,CAAf,GACM,+BADN,GAEM,EAHV;AAIA;;AACJ,aAAK,UAAL;AACIP,UAAAA,UAAU,CAACgC,QAAX,GACIP,KAAK,CAAClB,MAAN,GAAe,CAAf,GACM,+BADN,GAEM,EAHV;AAIA;;AACJ,aAAK,WAAL;AACIP,UAAAA,UAAU,CAACiC,SAAX,GACIR,KAAK,CAAClB,MAAN,GAAe,CAAf,GACM,+BADN,GAEM,EAHV;AAIA;;AACJ;AACI;AA5CR;;AA8CA,WAAK2B,QAAL,CAAc;AAAElC,QAAAA,UAAF;AAAc,SAACwB,IAAD,GAAQC;AAAtB,OAAd,EAA6C,MACzCJ,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB,CADJ;AAGH,KAzFkB;;AAGf,SAAKA,KAAL,GAAa;AACTY,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTC,MAAAA,KAAK,EAAE,IAHE;AAITE,MAAAA,WAAW,EAAE,IAJJ;AAKTC,MAAAA,QAAQ,EAAE,IALD;AAMTC,MAAAA,QAAQ,EAAE,IAND;AAOTC,MAAAA,SAAS,EAAE,IAPF;AAQTjC,MAAAA,UAAU,EAAE;AACR0B,QAAAA,SAAS,EAAE,EADH;AAERC,QAAAA,QAAQ,EAAE,EAFF;AAGRC,QAAAA,KAAK,EAAE,EAHC;AAIRE,QAAAA,WAAW,EAAE,EAJL;AAKRC,QAAAA,QAAQ,EAAE,EALF;AAMRC,QAAAA,QAAQ,EAAE,EANF;AAORC,QAAAA,SAAS,EAAE;AAPH;AARH,KAAb;AAkBH;;AAqEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnC,MAAAA;AAAF,QAAiB,KAAKc,KAA5B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,uCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,uBAFhB;AAGI,MAAA,IAAI,EAAC,WAHT;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,QAAQ,EAAE,KAAKY,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWKvB,UAAU,CAAC0B,SAAX,CAAqBnB,MAArB,GACG,CADH,iBAEG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,UAAU,CAAC0B,SADhB,CAbR,CADJ,CADJ,eAqBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAII,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,sBAFhB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,QAAQ,EAAE,KAAKH,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWKvB,UAAU,CAAC2B,QAAX,CAAoBpB,MAApB,GAA6B,CAA7B,iBACG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,UAAU,CAAC2B,QADhB,CAZR,CADJ,CArBJ,CADJ,eA0CI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAII,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,WAAW,EAAC,cAFhB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,QAAQ,EAAE,KAAKJ,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWKvB,UAAU,CAAC4B,KAAX,CAAiBrB,MAAjB,GAA0B,CAA1B,iBACG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,UAAU,CAAC4B,KADhB,CAZR,CADJ,CADJ,eAoBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,wBAFhB;AAGI,MAAA,IAAI,EAAC,aAHT;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,QAAQ,EAAE,KAAKL,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWKvB,UAAU,CAAC8B,WAAX,CAAuBvB,MAAvB,GACG,CADH,iBAEG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,UAAU,CAAC8B,WADhB,CAbR,CADJ,CApBJ,CA1CJ,eAmFI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,UAFhB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,QAAQ,EAAE,KAAKP,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWKvB,UAAU,CAAC+B,QAAX,CAAoBxB,MAApB,GAA6B,CAA7B,iBACG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,UAAU,CAAC+B,QADhB,CAZR,CADJ,CADJ,eAoBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,WAAW,EAAC,UAFhB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,QAAQ,EAAE,KAAKR,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWKvB,UAAU,CAACgC,QAAX,CAAoBzB,MAApB,GAA6B,CAA7B,iBACG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,UAAU,CAACgC,QADhB,CAZR,CADJ,CApBJ,CAnFJ,eA2HI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAII,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,YAFhB;AAGI,MAAA,IAAI,EAAC,WAHT;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,QAAQ,EAAE,KAAKT,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAUOvB,UAAU,CAACiC,SAAX,CAAqB1B,MAArB,GAA8B,CAA9B,iBACC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCP,UAAU,CAACiC,SAA3C,CAXR,CADJ,CADJ,CA3HJ,eA6II,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,MAAA,OAAO,EAAC,SAFZ;AAGI,MAAA,IAAI,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CA7IJ,eAsJI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,IAAI,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,CAtJJ,CAFJ,CADJ,CADJ,CADJ,CADJ;AAuKH;;AApQ8B;;AAsQnC,eAAezB,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Brand from \"./Brand\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nconst emailRegex = RegExp(\r\n    /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n    Object.values(formErrors).forEach((val) => {\r\n        val.length > 0 && (valid = false);\r\n    });\r\n    Object.values(rest).forEach(val => {\r\n        val === null && (valid = false);\r\n    });\r\n    return valid;\r\n};\r\n\r\nclass SignupPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: null,\r\n            lastName: null,\r\n            email: null,\r\n            phoneNumber: null,\r\n            username: null,\r\n            password: null,\r\n            truckName: null,\r\n            formErrors: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                phoneNumber: \"\",\r\n                username: \"\",\r\n                password: \"\",\r\n                truckName: \"\",\r\n            },\r\n        };\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid(this.state)) {\r\n            const data = new FormData(e.target);\r\n            \r\n            fetch('/api/createuser', {\r\n                method: 'POST',\r\n                body: data,\r\n              });\r\n\r\n        } else {\r\n            console.log(\"form is not valid\");\r\n        }\r\n    };\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let formErrors = this.state.formErrors;\r\n        switch (name) {\r\n            case \"firstName\":\r\n                formErrors.firstName =\r\n                    value.length < 2\r\n                        ? \"minimum 2 characters required\"\r\n                        : \"\";\r\n                break;\r\n            case \"lastName\":\r\n                formErrors.lastName =\r\n                    value.length < 3\r\n                        ? \"minimum 3 characters required\"\r\n                        : \"\";\r\n                break;\r\n            case \"email\":\r\n                formErrors.email =\r\n                    emailRegex.test(value)\r\n                        ? \"\"\r\n                        : \"invalid email address\";\r\n                break;\r\n            case \"phoneNumber\":\r\n                formErrors.phoneNumber =\r\n                    value.length < 10\r\n                        ? \"phone number must be exactly 10 numbers\"\r\n                        : \"\";\r\n                break;\r\n            case \"username\":    \r\n                formErrors.username =\r\n                    value.length < 5\r\n                        ? \"minimum 5 characters required\"\r\n                        : \"\";\r\n                break;\r\n            case \"password\":\r\n                formErrors.password =\r\n                    value.length < 8\r\n                        ? \"minimum 8 characters required\"\r\n                        : \"\";\r\n                break;\r\n            case \"truckName\":\r\n                formErrors.truckName =\r\n                    value.length < 5\r\n                        ? \"minimum 5 characters required\"\r\n                        : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({ formErrors, [name]: value }, () =>\r\n            console.log(this.state)\r\n        );\r\n    };\r\n    render() {\r\n        const { formErrors } = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <Container className=\"login d-flex align-items-center w-100\">\r\n                    <Row className=\"justify-content-center w-100\">\r\n                        <Jumbotron className=\"col-8\">\r\n                            <Brand />\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"firstName\">\r\n                                                First Name\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter your first name\"\r\n                                                name=\"firstName\"\r\n                                                formNoValidate\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            {formErrors.firstName.length >\r\n                                                0 && (\r\n                                                <span className=\"errorMessage\">\r\n                                                    {formErrors.firstName}\r\n                                                </span>\r\n                                            )}\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"lastName\">\r\n                                                Last Name\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter your last name\"\r\n                                                name=\"lastName\"\r\n                                                formNoValidate\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            {formErrors.lastName.length > 0 && (\r\n                                                <span className=\"errorMessage\">\r\n                                                    {formErrors.lastName}\r\n                                                </span>\r\n                                            )}\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"email\">\r\n                                                Email\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"email\"\r\n                                                placeholder=\"name@url.com\"\r\n                                                name=\"email\"\r\n                                                formNoValidate\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            {formErrors.email.length > 0 && (\r\n                                                <span className=\"errorMessage\">\r\n                                                    {formErrors.email}\r\n                                                </span>\r\n                                            )}\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"phoneNumber\">\r\n                                                Phone Number\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"5555555555 (no dashes)\"\r\n                                                name=\"phoneNumber\"\r\n                                                formNoValidate\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            {formErrors.phoneNumber.length >\r\n                                                0 && (\r\n                                                <span className=\"errorMessage\">\r\n                                                    {formErrors.phoneNumber}\r\n                                                </span>\r\n                                            )}\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"username\">\r\n                                                Username\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Username\"\r\n                                                name=\"username\"\r\n                                                formNoValidate\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            {formErrors.username.length > 0 && (\r\n                                                <span className=\"errorMessage\">\r\n                                                    {formErrors.username}\r\n                                                </span>\r\n                                            )}\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"password\">\r\n                                                Password\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                name=\"password\"\r\n                                                formNoValidate\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                            {formErrors.password.length > 0 && (\r\n                                                <span className=\"errorMessage\">\r\n                                                    {formErrors.password}\r\n                                                </span>\r\n                                            )}\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Col className=\"col-6\">\r\n                                        <Form.Group>\r\n                                            <Form.Label htmlFor=\"truckName\">\r\n                                                What is your Truck's name?\r\n                                            </Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Truck name\"\r\n                                                name=\"truckName\"\r\n                                                formNoValidate\r\n                                                onChange={this.handleChange}\r\n                                            />{formErrors.truckName.length > 0 && (\r\n                                                <span className=\"errorMessage\">{formErrors.truckName}</span>\r\n                                              )}\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Button\r\n                                        className=\"landing-btn col-4 mt-3\"\r\n                                        variant=\"primary\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                </Row>\r\n                                <Row className=\"justify-content-center\">\r\n                                    <a className=\"mt-3 teal\" href=\"#\">\r\n                                        Already a member? Sign in here\r\n                                    </a>\r\n                                </Row>\r\n                            </Form>\r\n                        </Jumbotron>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SignupPage;"]},"metadata":{},"sourceType":"module"}