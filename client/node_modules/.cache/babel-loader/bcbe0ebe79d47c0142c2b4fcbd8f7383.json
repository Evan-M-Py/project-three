{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan Pylar\\\\Desktop\\\\Coding\\\\project-three\\\\client\\\\src\\\\Components\\\\TodoList.js\";\nimport React from 'react'; // stateless component\n\nconst Title = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"titleWrapper\",\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"textCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"To-do List\"));\n};\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNewTodoAddition = this.handleNewTodoAddition.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleNewTodoAddition() {\n    if (this.input.value !== '') {\n      this.props.addTodo(this.input.value);\n      this.setState({\n        value: ''\n      });\n      this.input.placeholder = \"Add todo here...\";\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // ref should be passed a callback\n      // with underlying dom element as its\n      // argument to get its reference \n      React.createElement(\"div\", {\n        id: \"form\",\n        className: \"row my-2 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control col-9\",\n        ref: node => {\n          this.input = node;\n        },\n        value: this.state.value,\n        placeholder: \"Add todos here...\",\n        autocomplete: \"off\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary col-2 ml-2\",\n        onClick: this.handleNewTodoAddition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"+\"))\n    );\n  }\n\n}\n\nconst Todo = ({\n  todo,\n  remove\n}) => {\n  // single todo \n  return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"todos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, todo.value, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"removeBtn float-right\",\n    onClick: () => {\n      remove(todo.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"x\"));\n};\n\nconst List = ({\n  todos,\n  remove\n}) => {\n  let allTodos = [];\n\n  if (todos.length > 0) {\n    allTodos = todos.map(todo => {\n      // passing todo and remove method reference\n      return /*#__PURE__*/React.createElement(Todo, {\n        todo: todo,\n        remove: remove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }); //return (<p>{todo.value}</p>);\n    });\n  } else {\n    allTodos.push( /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"acu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }, \"All caught up!\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, allTodos);\n};\n\nclass ContainerForTodos extends React.Component {\n  constructor(props) {\n    super(props);\n    const localData = localStorage.todos ? JSON.parse(localStorage.todos) : [];\n    this.state = {\n      data: localData\n    }; // binding methods\n\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n  } // Handler to update localStorage\n\n\n  updateLocalStorage() {\n    if (typeof Storage !== \"undefined\") localStorage.todos = JSON.stringify(this.state.data);\n  } // Handler to add todo\n\n\n  addTodo(val) {\n    let id; // if localStorage is available then increase localStorage count\n    // else use global window object's id variable\n\n    if (typeof Storage !== \"undefined\") {\n      id = Number(localStorage.count);\n      localStorage.count = Number(localStorage.count) + 1;\n    } else {\n      id = window.id++;\n    }\n\n    const todo = {\n      value: val,\n      id: id\n    };\n    this.state.data.push(todo); // update state\n\n    this.setState({\n      data: this.state.data\n    }, () => {\n      // update localStorage\n      this.updateLocalStorage();\n    });\n  } // Handler to remove todo\n\n\n  removeTodo(id) {\n    // filter out the todo that has to be removed\n    const list = this.state.data.filter(todo => {\n      if (todo.id !== id) return todo;\n    }); // update state\n\n    this.setState({\n      data: list\n    }, () => {\n      // update localStorage\n      this.updateLocalStorage();\n    });\n  }\n\n  componentDidMount() {\n    localStorage.clear();\n\n    if (typeof Storage !== \"undefined\") {\n      if (!localStorage.todos) {\n        localStorage.todos = JSON.stringify(this.state.data);\n      }\n\n      if (!localStorage.count) {\n        localStorage.count = 0;\n      }\n    } else {\n      window.id = 0;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      todos: this.state.data,\n      remove: this.removeTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ContainerForTodos;","map":{"version":3,"sources":["C:/Users/Evan Pylar/Desktop/Coding/project-three/client/src/Components/TodoList.js"],"names":["React","Title","Form","Component","constructor","props","state","value","handleChange","bind","handleNewTodoAddition","event","setState","target","input","addTodo","placeholder","render","node","Todo","todo","remove","id","List","todos","allTodos","length","map","push","ContainerForTodos","localData","localStorage","JSON","parse","data","removeTodo","updateLocalStorage","Storage","stringify","val","Number","count","window","list","filter","componentDidMount","clear"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// stateless component\nconst Title = () => {\n    return (\n        <div id=\"titleWrapper\" className=\"text-center mb-4\">\n            <h2 className=\"textCenter\">To-do List</h2>\n        </div>\n    );\n};\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleNewTodoAddition = this.handleNewTodoAddition.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            value: event.target.value\n        });\n    }\n\n    handleNewTodoAddition() {\n        if (this.input.value !== '') {\n            this.props.addTodo(this.input.value);\n            this.setState({\n                value: ''\n            });\n            this.input.placeholder = \"Add todo here...\";\n        }\n    }\n\n    render() {\n        return (\n            // ref should be passed a callback\n            // with underlying dom element as its\n            // argument to get its reference \n            <div id=\"form\" className=\"row my-2 d-flex justify-content-center\">\n                <input\n                    className=\"form-control col-9\"\n                    ref={node => {\n                        this.input = node;\n                    }}\n                    value={this.state.value}\n                    placeholder=\"Add todos here...\"\n                    autocomplete=\"off\"\n                    onChange={this.handleChange}\n                />\n\n                <button className=\"btn btn-primary col-2 ml-2\"\n                    onClick={this.handleNewTodoAddition}\n                >\n                    +\n\t\t\t\t</button>\n            </div>\n        );\n    }\n}\n\nconst Todo = ({ todo, remove }) => {\n    // single todo \n    return (\n        <p className=\"todos\">\n            {todo.value}\n            <span\n                className=\"removeBtn float-right\"\n                onClick={() => {\n                    remove(todo.id)\n                }}>\n                x\n\t\t\t</span>\n        </p>\n    );\n};\n\nconst List = ({ todos, remove }) => {\n    let allTodos = [];\n\n    if (todos.length > 0) {\n        allTodos = todos.map(todo => {\n            // passing todo and remove method reference\n            return (<Todo todo={todo} remove={remove} />);\n            //return (<p>{todo.value}</p>);\n        });\n    } else {\n        allTodos.push(<h3 id=\"acu\">All caught up!</h3>);\n    }\n\n    return (\n        <div id=\"list\">\n            {allTodos}\n        </div>\n    );\n};\n\nclass ContainerForTodos extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const localData = localStorage.todos ? JSON.parse(localStorage.todos) : [];\n\n        this.state = {\n            data: localData\n        };\n\n        // binding methods\n        this.addTodo = this.addTodo.bind(this);\n        this.removeTodo = this.removeTodo.bind(this);\n    }\n    // Handler to update localStorage\n    updateLocalStorage() {\n        if (typeof (Storage) !== \"undefined\")\n            localStorage.todos = JSON.stringify(this.state.data);\n    }\n    // Handler to add todo\n    addTodo(val) {\n        let id;\n        // if localStorage is available then increase localStorage count\n        // else use global window object's id variable\n        if (typeof (Storage) !== \"undefined\") {\n            id = Number(localStorage.count);\n            localStorage.count = Number(localStorage.count) + 1;\n        } else {\n            id = window.id++;\n        }\n\n        const todo = {\n            value: val,\n            id: id\n        };\n\n        this.state.data.push(todo);\n        // update state\n        this.setState({\n            data: this.state.data\n        }, () => {\n            // update localStorage\n            this.updateLocalStorage();\n        });\n    }\n    // Handler to remove todo\n    removeTodo(id) {\n        // filter out the todo that has to be removed\n        const list = this.state.data.filter(todo => {\n            if (todo.id !== id)\n                return todo;\n        });\n        // update state\n        this.setState({\n            data: list\n        }, () => {\n            // update localStorage\n            this.updateLocalStorage();\n        });\n    }\n\n    componentDidMount() {\n        localStorage.clear();\n        if (typeof (Storage) !== \"undefined\") {\n            if (!localStorage.todos) {\n                localStorage.todos = JSON.stringify(this.state.data);\n            }\n            if (!localStorage.count) {\n                localStorage.count = 0;\n            }\n\n        } else {\n            window.id = 0;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Title />\n\n                <Form addTodo={this.addTodo} />\n                <List todos={this.state.data} remove={this.removeTodo} />\n            </div>\n        );\n    }\n}\n\nexport default ContainerForTodos"]},"metadata":{},"sourceType":"module"}